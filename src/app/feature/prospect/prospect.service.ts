import {Injectable} from '@angular/core';
import {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';
import {Observable, Subject, throwError} from 'rxjs';
import {catchError, tap} from 'rxjs/operators';
import {environment} from '../../../environments/environment';
import {
  AllTagsOptions,
  GroupedByData,
  ProspectColumn,
  ResponseList,
  SegmentRequest, SegmentView, TableModel,
  TagOptions
} from './models/prospect-model';
import Handsontable from 'handsontable';
import {HotTableRegisterer} from '@handsontable/angular';
import {CommonFilterRequest, GroupByRequest, SortByReq, SortByRequest} from './models/requests';

@Injectable({
  providedIn: 'root'
})
export class ProspectService {

  constructor(private httpClient: HttpClient) {
  }

  isSortingLoading = false;
  readonly userId: number = 12345;
  readonly companyId: number = 45678;
  private readonly coreBackendBaseURL = environment.coreBackendBaseURL;
  currentHotCol = -1;
  currentHotRow = -1;
  prospectColumn: ProspectColumn[] = [];
  prospectDataSet: any[] = [];
  originalProspectDataset: any[] = [];
  selectedTable: TableModel;
  allTagOptions: AllTagsOptions = new AllTagsOptions();
  private hotInstance: Handsontable;
  private hotRegisterer = new HotTableRegisterer();
  groupedBYData: GroupedByData[];
  filterArray = [];
  commonFilterRequest: CommonFilterRequest = new CommonFilterRequest();
  sortByRequest: SortByReq = new SortByReq();
  sortByDDMVisibility$ = new Subject<boolean>();
  isCheckboxActive = false;
  isFilterLoading = false;

  /*SVG ICON FOR SHOWING IN TABLE HEADER STARS HERE*/
  readonly SVGIcon = {
    user: '<i> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"> <path id="hoverBlue" d="M7.66491 1.33331C9.6335 1.33331 11.2502 2.94165 11.2502 4.89998C11.2502 6.87498 9.6335 8.46665 7.66491 8.46665C5.67957 8.46665 4.06282 6.87498 4.06282 4.89998C4.06282 2.94165 5.67957 1.33331 7.66491 1.33331ZM5.35287 9.06665H10.1194C12.2806 9.06665 14.0314 10.8083 14.0314 12.9583V13.9166H13.2356V12.9583C13.2356 11.2583 11.8366 9.85831 10.1194 9.85831H5.35287C3.62721 9.85831 2.23664 11.2666 2.23664 12.9583V13.9166H1.42407V12.9583C1.42407 10.8166 3.19161 9.06665 5.35287 9.06665ZM7.66491 2.11665C6.11517 2.11665 4.87538 3.36665 4.87538 4.89165C4.87538 6.43331 6.11517 7.66665 7.66491 7.66665C9.19789 7.66665 10.4461 6.43331 10.4461 4.89165C10.4377 3.37498 9.19789 2.11665 7.66491 2.11665Z" fill="#888888"> </svg> </i>',
    text: `<i> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M7.33325 6.00007H5.99992V6.66674H4.66658V4.66674H11.3333V6.66674H9.99992V6.00007H8.66658V10.0001H9.33325V11.3334H6.66658V10.0001H7.33325V6.00007ZM2.66659 1.3334H13.3333C14.0696 1.3334 14.6666 1.93036 14.6666 2.66674V13.3334C14.6666 14.0698 14.0696 14.6667 13.3333 14.6667H2.66659C1.93021 14.6667 1.33325 14.0698 1.33325 13.3334V2.66674C1.33325 1.93036 1.93021 1.3334 2.66659 1.3334ZM2.66659 2.66674V13.3334H13.3333V2.66674H2.66659Z" fill="#888888"/> </svg> </i>`,
    email: `<i> <svg width="16" height="20" viewBox="0 0 16 20" fill="none" xmlns="http://www.w3.org/2000/svg">  <path d="M8 1.66666C3.58333 1.66666 0 5.24999 0 9.66666C0 14.0833 3.58333 17.6667 8 17.6667C8.55 17.6667 9 17.2167 9 16.6667C9 16.1167 8.55 15.6667 8 15.6667C4.68333 15.6667 2 12.9833 2 9.66666C2 6.34999 4.68333 3.66666 8 3.66666C11.3167 3.66666 14 6.34999 14 9.66666V12.6667C14 13.2167 13.55 13.6667 13 13.6667C12.45 13.6667 12 13.2167 12 12.6667V9.66666C12 7.44999 10.2167 5.66666 8 5.66666C5.78333 5.66666 4 7.44999 4 9.66666C4 11.8833 5.78333 13.6667 8 13.6667C8.71667 13.6667 9.43333 13.4667 10.05 13.0833C10.2833 14.7167 11.7833 15.8667 13.4333 15.6333C14.9 15.4333 16 14.1667 16 12.6667V9.66666C16 5.24999 12.4167 1.66666 8 1.66666ZM8 11.6667C6.9 11.6667 6 10.7667 6 9.66666C6 8.56666 6.9 7.66666 8 7.66666C9.1 7.66666 10 8.56666 10 9.66666C10 10.7667 9.1 11.6667 8 11.6667Z" fill="#888888"/></svg> </i>`,
    phone: '<i> <svg class="phoneSvg" width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg"> <mask id="path-1-inside-1" fill="white"> <path d="M3.44995 0.424805C2.62495 0.424805 1.94995 1.0998 1.94995 1.9248C1.94995 2.7498 2.62495 3.4248 3.44995 3.4248C4.27495 3.4248 4.94995 2.7498 4.94995 1.9248C4.94995 1.0998 4.27495 0.424805 3.44995 0.424805ZM3.44995 2.6998C3.02495 2.6998 2.69995 2.3748 2.69995 1.9498C2.69995 1.5248 3.02495 1.1998 3.44995 1.1998C3.87495 1.1998 4.19995 1.5248 4.19995 1.9498C4.19995 2.3498 3.87495 2.6998 3.44995 2.6998Z"/> </mask> <path d="M3.44995 0.424805C2.62495 0.424805 1.94995 1.0998 1.94995 1.9248C1.94995 2.7498 2.62495 3.4248 3.44995 3.4248C4.27495 3.4248 4.94995 2.7498 4.94995 1.9248C4.94995 1.0998 4.27495 0.424805 3.44995 0.424805ZM3.44995 2.6998C3.02495 2.6998 2.69995 2.3748 2.69995 1.9498C2.69995 1.5248 3.02495 1.1998 3.44995 1.1998C3.87495 1.1998 4.19995 1.5248 4.19995 1.9498C4.19995 2.3498 3.87495 2.6998 3.44995 2.6998Z" fill="#888888"/> <path id="fillStrokeNone" d="M3.44995 -1.0752C1.79652 -1.0752 0.449951 0.271378 0.449951 1.9248H3.44995H3.44995V-1.0752ZM0.449951 1.9248C0.449951 3.57823 1.79652 4.9248 3.44995 4.9248V1.9248H3.44995H0.449951ZM3.44995 4.9248C5.10338 4.9248 6.44995 3.57823 6.44995 1.9248H3.44995H3.44995V4.9248ZM6.44995 1.9248C6.44995 0.271378 5.10338 -1.0752 3.44995 -1.0752V1.9248H3.44995H6.44995ZM3.44995 1.1998C3.62979 1.1998 3.82545 1.27273 3.97624 1.42352C4.12702 1.57431 4.19995 1.76997 4.19995 1.9498H1.19995C1.19995 3.20323 2.19652 4.1998 3.44995 4.1998V1.1998ZM4.19995 1.9498C4.19995 2.12964 4.12702 2.3253 3.97624 2.47609C3.82545 2.62688 3.62979 2.6998 3.44995 2.6998V-0.300195C2.19652 -0.300195 1.19995 0.696378 1.19995 1.9498H4.19995ZM3.44995 2.6998C3.27011 2.6998 3.07445 2.62688 2.92366 2.47609C2.77288 2.3253 2.69995 2.12964 2.69995 1.9498H5.69995C5.69995 0.696379 4.70338 -0.300195 3.44995 -0.300195V2.6998ZM2.69995 1.9498C2.69995 1.55407 3.0142 1.1998 3.44995 1.1998V4.1998C4.7357 4.1998 5.69995 3.14554 5.69995 1.9498H2.69995Z" fill="#888888" mask="url(#path-1-inside-1)"/> <mask id="path-3-inside-2" fill="white"> <path d="M8 0.424805C7.175 0.424805 6.5 1.0998 6.5 1.9248C6.5 2.7498 7.175 3.4248 8 3.4248C8.825 3.4248 9.5 2.7498 9.5 1.9248C9.5 1.0998 8.825 0.424805 8 0.424805ZM8 2.6998C7.575 2.6998 7.25 2.3748 7.25 1.9498C7.25 1.5248 7.575 1.1998 8 1.1998C8.425 1.1998 8.75 1.5248 8.75 1.9498C8.75 2.3498 8.425 2.6998 8 2.6998Z"/> </mask> <path d="M8 0.424805C7.175 0.424805 6.5 1.0998 6.5 1.9248C6.5 2.7498 7.175 3.4248 8 3.4248C8.825 3.4248 9.5 2.7498 9.5 1.9248C9.5 1.0998 8.825 0.424805 8 0.424805ZM8 2.6998C7.575 2.6998 7.25 2.3748 7.25 1.9498C7.25 1.5248 7.575 1.1998 8 1.1998C8.425 1.1998 8.75 1.5248 8.75 1.9498C8.75 2.3498 8.425 2.6998 8 2.6998Z" fill="#888888"/> <path id="fillStrokeNone" d="M8 -1.0752C6.34657 -1.0752 5 0.271378 5 1.9248H8V-1.0752ZM5 1.9248C5 3.57823 6.34657 4.9248 8 4.9248V1.9248H5ZM8 4.9248C9.65343 4.9248 11 3.57823 11 1.9248H8V4.9248ZM11 1.9248C11 0.271378 9.65343 -1.0752 8 -1.0752V1.9248H11ZM8 1.1998C8.17984 1.1998 8.3755 1.27273 8.52629 1.42352C8.67707 1.57431 8.75 1.76997 8.75 1.9498H5.75C5.75 3.20323 6.74657 4.1998 8 4.1998V1.1998ZM8.75 1.9498C8.75 2.12964 8.67707 2.3253 8.52629 2.47609C8.3755 2.62688 8.17984 2.6998 8 2.6998V-0.300195C6.74657 -0.300195 5.75 0.696378 5.75 1.9498H8.75ZM8 2.6998C7.82016 2.6998 7.6245 2.62688 7.47371 2.47609C7.32293 2.3253 7.25 2.12964 7.25 1.9498H10.25C10.25 0.696378 9.25343 -0.300195 8 -0.300195V2.6998ZM7.25 1.9498C7.25 1.55407 7.56425 1.1998 8 1.1998V4.1998C9.28575 4.1998 10.25 3.14554 10.25 1.9498H7.25Z" fill="#888888" mask="url(#path-3-inside-2)"/> <mask id="path-5-inside-3" fill="white"> <path d="M12.55 3.44971C13.375 3.44971 14.05 2.77471 14.05 1.94971C14.05 1.12471 13.375 0.449707 12.55 0.449707C11.725 0.449707 11.05 1.12471 11.05 1.94971C11.05 2.77471 11.725 3.44971 12.55 3.44971ZM12.55 1.17471C12.975 1.17471 13.3 1.49971 13.3 1.92471C13.3 2.34971 12.975 2.67471 12.55 2.67471C12.125 2.67471 11.8 2.34971 11.8 1.92471C11.8 1.52471 12.125 1.17471 12.55 1.17471Z"/> </mask> <path d="M12.55 3.44971C13.375 3.44971 14.05 2.77471 14.05 1.94971C14.05 1.12471 13.375 0.449707 12.55 0.449707C11.725 0.449707 11.05 1.12471 11.05 1.94971C11.05 2.77471 11.725 3.44971 12.55 3.44971ZM12.55 1.17471C12.975 1.17471 13.3 1.49971 13.3 1.92471C13.3 2.34971 12.975 2.67471 12.55 2.67471C12.125 2.67471 11.8 2.34971 11.8 1.92471C11.8 1.52471 12.125 1.17471 12.55 1.17471Z" fill="#888888"/> <path id="fillStrokeNone" d="M12.55 4.94971C14.2035 4.94971 15.55 3.60313 15.55 1.94971H12.55V4.94971ZM15.55 1.94971C15.55 0.29628 14.2035 -1.05029 12.55 -1.05029V1.94971H15.55ZM12.55 -1.05029C10.8966 -1.05029 9.55005 0.29628 9.55005 1.94971H12.55V-1.05029ZM9.55005 1.94971C9.55005 3.60313 10.8966 4.94971 12.55 4.94971V1.94971H9.55005ZM12.55 2.67471C12.3702 2.67471 12.1746 2.60178 12.0238 2.45099C11.873 2.30021 11.8 2.10454 11.8 1.92471H14.8C14.8 0.67128 13.8035 -0.325293 12.55 -0.325293V2.67471ZM11.8 1.92471C11.8 1.74487 11.873 1.54921 12.0238 1.39842C12.1746 1.24763 12.3702 1.17471 12.55 1.17471V4.17471C13.8035 4.17471 14.8 3.17813 14.8 1.92471H11.8ZM12.55 1.17471C12.7299 1.17471 12.9255 1.24763 13.0763 1.39842C13.2271 1.54921 13.3 1.74487 13.3 1.92471H10.3C10.3 3.17813 11.2966 4.17471 12.55 4.17471V1.17471ZM13.3 1.92471C13.3 2.32044 12.9858 2.67471 12.55 2.67471V-0.325293C11.2643 -0.325293 10.3 0.728975 10.3 1.92471H13.3Z" fill="#888888" mask="url(#path-5-inside-3)"/> <mask id="path-7-inside-4" fill="white"> <path d="M3.44995 4.72461C2.62495 4.72461 1.94995 5.39961 1.94995 6.22461C1.94995 7.04961 2.62495 7.72461 3.44995 7.72461C4.27495 7.72461 4.94995 7.04961 4.94995 6.22461C4.94995 5.39961 4.27495 4.72461 3.44995 4.72461ZM3.44995 6.97461C3.02495 6.97461 2.69995 6.64961 2.69995 6.22461C2.69995 5.79961 3.02495 5.47461 3.44995 5.47461C3.87495 5.47461 4.19995 5.79961 4.19995 6.22461C4.19995 6.62461 3.87495 6.97461 3.44995 6.97461Z"/> </mask> <path d="M3.44995 4.72461C2.62495 4.72461 1.94995 5.39961 1.94995 6.22461C1.94995 7.04961 2.62495 7.72461 3.44995 7.72461C4.27495 7.72461 4.94995 7.04961 4.94995 6.22461C4.94995 5.39961 4.27495 4.72461 3.44995 4.72461ZM3.44995 6.97461C3.02495 6.97461 2.69995 6.64961 2.69995 6.22461C2.69995 5.79961 3.02495 5.47461 3.44995 5.47461C3.87495 5.47461 4.19995 5.79961 4.19995 6.22461C4.19995 6.62461 3.87495 6.97461 3.44995 6.97461Z" fill="#888888"/> <path id="fillStrokeNone" d="M3.44995 3.22461C1.79652 3.22461 0.449951 4.57118 0.449951 6.22461H3.44995H3.44995V3.22461ZM0.449951 6.22461C0.449951 7.87804 1.79652 9.22461 3.44995 9.22461V6.22461H3.44995H0.449951ZM3.44995 9.22461C5.10338 9.22461 6.44995 7.87804 6.44995 6.22461H3.44995H3.44995V9.22461ZM6.44995 6.22461C6.44995 4.57118 5.10338 3.22461 3.44995 3.22461V6.22461H3.44995H6.44995ZM3.44995 5.47461C3.62979 5.47461 3.82545 5.54754 3.97624 5.69832C4.12702 5.84911 4.19995 6.04477 4.19995 6.22461H1.19995C1.19995 7.47804 2.19652 8.47461 3.44995 8.47461V5.47461ZM4.19995 6.22461C4.19995 6.40445 4.12702 6.60011 3.97624 6.75089C3.82545 6.90168 3.62979 6.97461 3.44995 6.97461V3.97461C2.19652 3.97461 1.19995 4.97118 1.19995 6.22461H4.19995ZM3.44995 6.97461C3.27011 6.97461 3.07445 6.90168 2.92367 6.75089C2.77288 6.60011 2.69995 6.40445 2.69995 6.22461H5.69995C5.69995 4.97118 4.70338 3.97461 3.44995 3.97461V6.97461ZM2.69995 6.22461C2.69995 5.82888 3.0142 5.47461 3.44995 5.47461V8.47461C4.7357 8.47461 5.69995 7.42034 5.69995 6.22461H2.69995Z" fill="#888888" mask="url(#path-7-inside-4)"/> <mask id="path-9-inside-5" fill="white"> <path d="M8 4.72461C7.175 4.72461 6.5 5.39961 6.5 6.22461C6.5 7.04961 7.175 7.72461 8 7.72461C8.825 7.72461 9.5 7.04961 9.5 6.22461C9.5 5.39961 8.825 4.72461 8 4.72461ZM8 6.97461C7.575 6.97461 7.25 6.64961 7.25 6.22461C7.25 5.79961 7.575 5.47461 8 5.47461C8.425 5.47461 8.75 5.79961 8.75 6.22461C8.75 6.62461 8.425 6.97461 8 6.97461Z"/> </mask> <path d="M8 4.72461C7.175 4.72461 6.5 5.39961 6.5 6.22461C6.5 7.04961 7.175 7.72461 8 7.72461C8.825 7.72461 9.5 7.04961 9.5 6.22461C9.5 5.39961 8.825 4.72461 8 4.72461ZM8 6.97461C7.575 6.97461 7.25 6.64961 7.25 6.22461C7.25 5.79961 7.575 5.47461 8 5.47461C8.425 5.47461 8.75 5.79961 8.75 6.22461C8.75 6.62461 8.425 6.97461 8 6.97461Z" fill="#888888"/> <path id="fillStrokeNone" d="M8 3.22461C6.34657 3.22461 5 4.57118 5 6.22461H8V3.22461ZM5 6.22461C5 7.87804 6.34657 9.22461 8 9.22461V6.22461H5ZM8 9.22461C9.65343 9.22461 11 7.87804 11 6.22461H8V9.22461ZM11 6.22461C11 4.57118 9.65343 3.22461 8 3.22461V6.22461H11ZM8 5.47461C8.17984 5.47461 8.3755 5.54754 8.52629 5.69832C8.67707 5.84911 8.75 6.04477 8.75 6.22461H5.75C5.75 7.47804 6.74657 8.47461 8 8.47461V5.47461ZM8.75 6.22461C8.75 6.40445 8.67707 6.60011 8.52629 6.75089C8.3755 6.90168 8.17984 6.97461 8 6.97461V3.97461C6.74657 3.97461 5.75 4.97118 5.75 6.22461H8.75ZM8 6.97461C7.82016 6.97461 7.6245 6.90168 7.47371 6.75089C7.32293 6.60011 7.25 6.40445 7.25 6.22461H10.25C10.25 4.97118 9.25343 3.97461 8 3.97461V6.97461ZM7.25 6.22461C7.25 5.82888 7.56425 5.47461 8 5.47461V8.47461C9.28575 8.47461 10.25 7.42034 10.25 6.22461H7.25Z" fill="#888888" mask="url(#path-9-inside-5)"/> <mask id="path-11-inside-6" fill="white"> <path d="M12.55 4.72461C11.725 4.72461 11.05 5.39961 11.05 6.22461C11.05 7.04961 11.725 7.72461 12.55 7.72461C13.375 7.72461 14.05 7.04961 14.05 6.22461C14.05 5.39961 13.375 4.72461 12.55 4.72461ZM12.55 6.97461C12.125 6.97461 11.8 6.64961 11.8 6.22461C11.8 5.79961 12.125 5.47461 12.55 5.47461C12.975 5.47461 13.3 5.79961 13.3 6.22461C13.3 6.62461 12.975 6.97461 12.55 6.97461Z"/> </mask> <path d="M12.55 4.72461C11.725 4.72461 11.05 5.39961 11.05 6.22461C11.05 7.04961 11.725 7.72461 12.55 7.72461C13.375 7.72461 14.05 7.04961 14.05 6.22461C14.05 5.39961 13.375 4.72461 12.55 4.72461ZM12.55 6.97461C12.125 6.97461 11.8 6.64961 11.8 6.22461C11.8 5.79961 12.125 5.47461 12.55 5.47461C12.975 5.47461 13.3 5.79961 13.3 6.22461C13.3 6.62461 12.975 6.97461 12.55 6.97461Z" fill="#888888"/> <path id="fillStrokeNone" d="M12.55 3.22461C10.8966 3.22461 9.55005 4.57118 9.55005 6.22461H12.55V3.22461ZM9.55005 6.22461C9.55005 7.87804 10.8966 9.22461 12.55 9.22461V6.22461H9.55005ZM12.55 9.22461C14.2035 9.22461 15.55 7.87804 15.55 6.22461H12.55V9.22461ZM15.55 6.22461C15.55 4.57118 14.2035 3.22461 12.55 3.22461V6.22461H15.55ZM12.55 5.47461C12.7299 5.47461 12.9255 5.54754 13.0763 5.69832C13.2271 5.84911 13.3 6.04477 13.3 6.22461H10.3C10.3 7.47804 11.2966 8.47461 12.55 8.47461V5.47461ZM13.3 6.22461C13.3 6.40445 13.2271 6.60011 13.0763 6.75089C12.9255 6.90168 12.7299 6.97461 12.55 6.97461V3.97461C11.2966 3.97461 10.3 4.97118 10.3 6.22461H13.3ZM12.55 6.97461C12.3702 6.97461 12.1746 6.90168 12.0238 6.75089C11.873 6.60011 11.8 6.40445 11.8 6.22461H14.8C14.8 4.97118 13.8035 3.97461 12.55 3.97461V6.97461ZM11.8 6.22461C11.8 5.82888 12.1143 5.47461 12.55 5.47461V8.47461C13.8358 8.47461 14.8 7.42034 14.8 6.22461H11.8Z" fill="#888888" mask="url(#path-11-inside-6)"/> <mask id="path-13-inside-7" fill="white"> <path d="M3.44995 9C2.62495 9 1.94995 9.675 1.94995 10.5C1.94995 11.325 2.62495 12 3.44995 12C4.27495 12 4.94995 11.325 4.94995 10.5C4.94995 9.675 4.27495 9 3.44995 9ZM3.44995 11.25C3.02495 11.25 2.69995 10.925 2.69995 10.5C2.69995 10.075 3.02495 9.75 3.44995 9.75C3.87495 9.75 4.19995 10.075 4.19995 10.5C4.19995 10.925 3.87495 11.25 3.44995 11.25Z"/> </mask> <path d="M3.44995 9C2.62495 9 1.94995 9.675 1.94995 10.5C1.94995 11.325 2.62495 12 3.44995 12C4.27495 12 4.94995 11.325 4.94995 10.5C4.94995 9.675 4.27495 9 3.44995 9ZM3.44995 11.25C3.02495 11.25 2.69995 10.925 2.69995 10.5C2.69995 10.075 3.02495 9.75 3.44995 9.75C3.87495 9.75 4.19995 10.075 4.19995 10.5C4.19995 10.925 3.87495 11.25 3.44995 11.25Z" fill="#888888"/> <path id="fillStrokeNone" d="M3.44995 7.5C1.79652 7.5 0.449951 8.84657 0.449951 10.5H3.44995H3.44995V7.5ZM0.449951 10.5C0.449951 12.1534 1.79652 13.5 3.44995 13.5V10.5H3.44995H0.449951ZM3.44995 13.5C5.10338 13.5 6.44995 12.1534 6.44995 10.5H3.44995H3.44995V13.5ZM6.44995 10.5C6.44995 8.84657 5.10338 7.5 3.44995 7.5V10.5H3.44995H6.44995ZM3.44995 9.75C3.62979 9.75 3.82545 9.82293 3.97624 9.97371C4.12702 10.1245 4.19995 10.3202 4.19995 10.5H1.19995C1.19995 11.7534 2.19652 12.75 3.44995 12.75V9.75ZM4.19995 10.5C4.19995 10.6798 4.12702 10.8755 3.97624 11.0263C3.82545 11.1771 3.62979 11.25 3.44995 11.25V8.25C2.19652 8.25 1.19995 9.24657 1.19995 10.5H4.19995ZM3.44995 11.25C3.27011 11.25 3.07445 11.1771 2.92367 11.0263C2.77288 10.8755 2.69995 10.6798 2.69995 10.5H5.69995C5.69995 9.24657 4.70338 8.25 3.44995 8.25V11.25ZM2.69995 10.5C2.69995 10.3202 2.77288 10.1245 2.92367 9.97372C3.07445 9.82293 3.27011 9.75 3.44995 9.75V12.75C4.70338 12.75 5.69995 11.7534 5.69995 10.5H2.69995Z" fill="#888888" mask="url(#path-13-inside-7)"/> <mask id="path-15-inside-8" fill="white"> <path d="M8 9C7.175 9 6.5 9.675 6.5 10.5C6.5 11.325 7.175 12 8 12C8.825 12 9.5 11.325 9.5 10.5C9.5 9.675 8.825 9 8 9ZM8 11.25C7.575 11.25 7.25 10.925 7.25 10.5C7.25 10.075 7.575 9.75 8 9.75C8.425 9.75 8.75 10.075 8.75 10.5C8.75 10.925 8.425 11.25 8 11.25Z"/> </mask> <path d="M8 9C7.175 9 6.5 9.675 6.5 10.5C6.5 11.325 7.175 12 8 12C8.825 12 9.5 11.325 9.5 10.5C9.5 9.675 8.825 9 8 9ZM8 11.25C7.575 11.25 7.25 10.925 7.25 10.5C7.25 10.075 7.575 9.75 8 9.75C8.425 9.75 8.75 10.075 8.75 10.5C8.75 10.925 8.425 11.25 8 11.25Z" fill="#888888"/> <path id="fillStrokeNone" d="M8 7.5C6.34657 7.5 5 8.84657 5 10.5H8V7.5ZM5 10.5C5 12.1534 6.34657 13.5 8 13.5V10.5H5ZM8 13.5C9.65343 13.5 11 12.1534 11 10.5H8V13.5ZM11 10.5C11 8.84657 9.65343 7.5 8 7.5V10.5H11ZM8 9.75C8.17984 9.75 8.3755 9.82293 8.52629 9.97371C8.67707 10.1245 8.75 10.3202 8.75 10.5H5.75C5.75 11.7534 6.74657 12.75 8 12.75V9.75ZM8.75 10.5C8.75 10.6798 8.67707 10.8755 8.52629 11.0263C8.3755 11.1771 8.17984 11.25 8 11.25V8.25C6.74657 8.25 5.75 9.24657 5.75 10.5H8.75ZM8 11.25C7.82016 11.25 7.6245 11.1771 7.47371 11.0263C7.32293 10.8755 7.25 10.6798 7.25 10.5H10.25C10.25 9.24657 9.25343 8.25 8 8.25V11.25ZM7.25 10.5C7.25 10.3202 7.32293 10.1245 7.47371 9.97371C7.6245 9.82293 7.82016 9.75 8 9.75V12.75C9.25343 12.75 10.25 11.7534 10.25 10.5H7.25Z" fill="#888888" mask="url(#path-15-inside-8)"/> <mask id="path-17-inside-9" fill="white"> <path d="M8 12.5498C7.175 12.5498 6.5 13.2248 6.5 14.0498C6.5 14.8748 7.175 15.5498 8 15.5498C8.825 15.5498 9.5 14.8748 9.5 14.0498C9.5 13.2248 8.825 12.5498 8 12.5498ZM8 14.8248C7.575 14.8248 7.25 14.4998 7.25 14.0748C7.25 13.6498 7.575 13.3248 8 13.3248C8.425 13.3248 8.75 13.6498 8.75 14.0748C8.75 14.4748 8.425 14.8248 8 14.8248Z"/> </mask> <path d="M8 12.5498C7.175 12.5498 6.5 13.2248 6.5 14.0498C6.5 14.8748 7.175 15.5498 8 15.5498C8.825 15.5498 9.5 14.8748 9.5 14.0498C9.5 13.2248 8.825 12.5498 8 12.5498ZM8 14.8248C7.575 14.8248 7.25 14.4998 7.25 14.0748C7.25 13.6498 7.575 13.3248 8 13.3248C8.425 13.3248 8.75 13.6498 8.75 14.0748C8.75 14.4748 8.425 14.8248 8 14.8248Z" fill="#888888"/> <path id="fillStrokeNone" d="M8 11.0498C6.34657 11.0498 5 12.3964 5 14.0498H8V11.0498ZM5 14.0498C5 15.7032 6.34657 17.0498 8 17.0498V14.0498H5ZM8 17.0498C9.65343 17.0498 11 15.7032 11 14.0498H8V17.0498ZM11 14.0498C11 12.3964 9.65343 11.0498 8 11.0498V14.0498H11ZM8 13.3248C8.17984 13.3248 8.3755 13.3977 8.52629 13.5485C8.67707 13.6993 8.75 13.895 8.75 14.0748H5.75C5.75 15.3282 6.74657 16.3248 8 16.3248V13.3248ZM8.75 14.0748C8.75 14.2546 8.67707 14.4503 8.52629 14.6011C8.3755 14.7519 8.17984 14.8248 8 14.8248V11.8248C6.74657 11.8248 5.75 12.8214 5.75 14.0748H8.75ZM8 14.8248C7.82016 14.8248 7.6245 14.7519 7.47371 14.6011C7.32293 14.4503 7.25 14.2546 7.25 14.0748H10.25C10.25 12.8214 9.25343 11.8248 8 11.8248V14.8248ZM7.25 14.0748C7.25 13.6791 7.56425 13.3248 8 13.3248V16.3248C9.28575 16.3248 10.25 15.2705 10.25 14.0748H7.25Z" fill="#888888" mask="url(#path-17-inside-9)"/> <mask id="path-19-inside-10" fill="white"> <path d="M12.55 9C11.725 9 11.05 9.675 11.05 10.5C11.05 11.325 11.725 12 12.55 12C13.375 12 14.05 11.325 14.05 10.5C14.05 9.675 13.375 9 12.55 9ZM12.55 11.25C12.125 11.25 11.8 10.925 11.8 10.5C11.8 10.075 12.125 9.75 12.55 9.75C12.975 9.75 13.3 10.075 13.3 10.5C13.3 10.925 12.975 11.25 12.55 11.25Z"/> </mask> <path d="M12.55 9C11.725 9 11.05 9.675 11.05 10.5C11.05 11.325 11.725 12 12.55 12C13.375 12 14.05 11.325 14.05 10.5C14.05 9.675 13.375 9 12.55 9ZM12.55 11.25C12.125 11.25 11.8 10.925 11.8 10.5C11.8 10.075 12.125 9.75 12.55 9.75C12.975 9.75 13.3 10.075 13.3 10.5C13.3 10.925 12.975 11.25 12.55 11.25Z" fill="#888888"/> <path id="fillStrokeNone" d="M12.55 7.5C10.8966 7.5 9.55005 8.84657 9.55005 10.5H12.55V7.5ZM9.55005 10.5C9.55005 12.1534 10.8966 13.5 12.55 13.5V10.5H9.55005ZM12.55 13.5C14.2035 13.5 15.55 12.1534 15.55 10.5H12.55V13.5ZM15.55 10.5C15.55 8.84657 14.2035 7.5 12.55 7.5V10.5H15.55ZM12.55 9.75C12.7299 9.75 12.9255 9.82293 13.0763 9.97371C13.2271 10.1245 13.3 10.3202 13.3 10.5H10.3C10.3 11.7534 11.2966 12.75 12.55 12.75V9.75ZM13.3 10.5C13.3 10.6798 13.2271 10.8755 13.0763 11.0263C12.9255 11.1771 12.7299 11.25 12.55 11.25V8.25C11.2966 8.25 10.3 9.24657 10.3 10.5H13.3ZM12.55 11.25C12.3702 11.25 12.1746 11.1771 12.0238 11.0263C11.873 10.8755 11.8 10.6798 11.8 10.5H14.8C14.8 9.24657 13.8035 8.25 12.55 8.25V11.25ZM11.8 10.5C11.8 10.3202 11.873 10.1245 12.0238 9.97371C12.1746 9.82293 12.3702 9.75 12.55 9.75V12.75C13.8035 12.75 14.8 11.7534 14.8 10.5H11.8Z" fill="#888888" mask="url(#path-19-inside-10)"/> </svg> </i>',
    tag: '<i> <svg width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M7.84001 1.76001C4.48001 1.76001 1.76001 4.48001 1.76001 7.84001C1.76001 11.2 4.48001 13.92 7.84001 13.92C11.2 13.92 13.92 11.2 13.92 7.84001C13.92 4.48001 11.2 1.76001 7.84001 1.76001ZM7.76001 10L3.93601 6.27201L4.59201 5.60001L7.76001 8.68801L10.848 5.52001L11.52 6.17601L7.76001 10Z" fill="#888888"/> </svg> </i>',
    date: '<i> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"> <path id="hoverBlue" d="M12.3759 2.04757H10.6545V0.906011C10.6545 0.70669 10.4915 0.54361 10.2921 0.54361C10.0928 0.54361 9.92974 0.70669 9.92974 0.906011V2.04757H5.70777V0.906011C5.70777 0.70669 5.54469 0.54361 5.34537 0.54361C5.14605 0.54361 4.98297 0.70669 4.98297 0.906011V2.04757H3.26157C2.55489 2.04757 1.99316 2.60929 1.99316 3.31598V12.4666C1.99316 13.1733 2.55489 13.735 3.26157 13.735H12.3759C13.0826 13.735 13.6444 13.1733 13.6444 12.4666V3.31598C13.6444 2.60929 13.0826 2.04757 12.3759 2.04757ZM12.9196 12.4666C12.9196 12.7746 12.684 13.0102 12.3759 13.0102H3.26157C2.95353 13.0102 2.71797 12.7746 2.71797 12.4666V5.97962H12.9196V12.4666ZM12.9196 5.25482H2.71797V3.31598C2.71797 3.00794 2.95353 2.77238 3.26157 2.77238H4.98297V3.98642C4.98297 4.18574 5.14605 4.34882 5.34537 4.34882C5.54469 4.34882 5.70777 4.18574 5.70777 3.98642V2.77238H9.92974V3.98642C9.92974 4.18574 10.0928 4.34882 10.2921 4.34882C10.4915 4.34882 10.6545 4.18574 10.6545 3.98642V2.77238H12.3759C12.684 2.77238 12.9196 3.00794 12.9196 3.31598V5.25482ZM5.85273 12.0317H9.78478C10.4915 12.0317 11.0532 11.47 11.0532 10.7633V8.24463C11.0532 7.53795 10.4915 6.97623 9.78478 6.97623H5.85273C5.14605 6.97623 4.58433 7.53795 4.58433 8.24463V10.7452C4.58433 11.4519 5.14605 12.0317 5.85273 12.0317ZM5.30913 8.24463C5.30913 7.93659 5.54469 7.70103 5.85273 7.70103H9.78478C10.0928 7.70103 10.3284 7.93659 10.3284 8.24463V10.7452C10.3284 11.0532 10.0928 11.2888 9.78478 11.2888H5.85273C5.54469 11.2888 5.30913 11.0532 5.30913 10.7452V8.24463Z" fill="#888888"> </svg> </i>',
    number: '<i> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M13.4537 6.13019C14.0356 6.13019 14.5092 5.65691 14.51 5.07467C14.51 4.49195 14.0359 4.01755 13.4537 4.01755H12.1881L12.4641 2.69099C12.5212 2.41467 12.4676 2.13291 12.3131 1.89675C12.1582 1.66075 11.9211 1.49947 11.6447 1.44187C11.5737 1.42731 11.5012 1.41963 11.4289 1.41963C10.9319 1.41963 10.4974 1.77307 10.3951 2.26075L10.0297 4.01755L7.68187 4.01835L7.96059 2.67643C8.01851 2.40011 7.96475 2.11835 7.81019 1.88187C7.65547 1.64619 7.41787 1.48427 7.14187 1.42699C7.07099 1.41195 6.99787 1.40427 6.92571 1.40427C6.42827 1.40427 5.99371 1.75819 5.89243 2.24555L5.52395 4.01819H3.33163C2.74971 4.01819 2.27595 4.49179 2.27595 5.07451C2.27595 5.65643 2.75003 6.13003 3.33243 6.13003H5.08427L4.37915 9.52123H2.54555C1.96363 9.52123 1.48987 9.99483 1.48987 10.5775C1.48987 11.1595 1.96379 11.6332 2.54619 11.6332H3.93995L3.59067 13.3099C3.47243 13.8795 3.83979 14.4399 4.41019 14.559C4.48107 14.5735 4.55371 14.5812 4.62587 14.5812C5.12331 14.5812 5.55819 14.2275 5.65947 13.7403L6.09739 11.6334H8.44587L8.09387 13.3252C8.03675 13.6012 8.09003 13.8833 8.24459 14.119C8.39947 14.3551 8.63691 14.5166 8.91339 14.574C8.98443 14.5889 9.05675 14.5963 9.12875 14.5963C9.62651 14.5963 10.0614 14.2427 10.1628 13.7553L10.6038 11.6334H12.6673C13.2494 11.6334 13.723 11.1599 13.7236 10.5777C13.7236 9.99499 13.2497 9.52059 12.6673 9.52059H11.0435L11.7484 6.13051H13.4537V6.13019ZM9.59019 6.13019L8.88555 9.52027L6.53707 9.52123L7.24219 6.13019H9.59019Z" fill="#888888"/> </svg> </i>',
    url: '<i> <svg width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg"> <path id="hoverBlue" d="M10.6857 3.88571C10.1429 3.88571 9.62858 4.08571 9.25715 4.48571L8.54287 5.2C8.42858 5.31428 8.42858 5.48571 8.54287 5.6C8.65715 5.71428 8.82858 5.71428 8.94287 5.6L9.65715 4.88571C9.94287 4.6 10.3143 4.45714 10.6857 4.45714C11.0857 4.45714 11.4572 4.6 11.7143 4.88571C12.2857 5.45714 12.2857 6.37143 11.7143 6.94285L9.54287 9.11428C9.25715 9.4 8.88572 9.54285 8.5143 9.54285C8.1143 9.54285 7.74287 9.4 7.48572 9.11428C7.28572 8.91428 7.14287 8.62857 7.08572 8.34285C7.05715 8.2 6.9143 8.08571 6.74287 8.11428C6.60001 8.14285 6.48572 8.28571 6.5143 8.45714C6.60001 8.85714 6.77144 9.22857 7.08572 9.51428C7.45715 9.88571 7.97144 10.1143 8.5143 10.1143C9.05715 10.1143 9.57144 9.91428 9.94287 9.51428L12.1143 7.34285C12.9143 6.54285 12.9143 5.25714 12.1143 4.45714C11.7429 4.08571 11.2286 3.88571 10.6857 3.88571Z" fill="#888888" stroke-miterlimit="10"/> <path id="hoverBlue" d="M7.02856 10.4286L6.34285 11.1143C6.05713 11.4 5.68571 11.5429 5.31428 11.5429C4.91428 11.5429 4.54285 11.4 4.28571 11.1143C3.71428 10.5429 3.71428 9.62857 4.28571 9.05714L6.45713 6.88571C6.74285 6.6 7.11428 6.45714 7.48571 6.45714C7.88571 6.45714 8.25713 6.6 8.51428 6.88571C8.79999 7.17143 8.94285 7.51428 8.94285 7.91428C8.94285 8.05714 9.0857 8.2 9.22856 8.2C9.39999 8.2 9.51428 8.05714 9.51428 7.91428C9.51428 7.37143 9.28571 6.88571 8.91428 6.48571C8.54285 6.11428 8.02856 5.88571 7.48571 5.88571C6.94285 5.88571 6.42856 6.08571 6.05713 6.48571L3.88571 8.65714C3.51428 9.02857 3.28571 9.54286 3.28571 10.0857C3.28571 10.6286 3.48571 11.1429 3.88571 11.5143C4.28571 11.8857 4.77142 12.1143 5.31428 12.1143C5.85713 12.1143 6.37142 11.9143 6.74285 11.5143L7.42856 10.8286C7.54285 10.7143 7.54285 10.5429 7.42856 10.4286C7.31428 10.3143 7.14285 10.3143 7.02856 10.4286Z" fill="#888888" stroke-miterlimit="10"/><path id="hoverBlue" d="M15.1428 11.9143V4.08572C15.1428 2.31429 13.6857 0.857147 11.9143 0.857147H4.08569C2.31426 0.857147 0.857117 2.31429 0.857117 4.08572V11.9429C0.857117 13.6857 2.31426 15.1429 4.08569 15.1429H11.9143C13.6857 15.1429 15.1428 13.6857 15.1428 11.9143ZM11.9143 14.5714H4.08569C2.62855 14.5714 1.42855 13.3714 1.42855 11.9143V4.08572C1.42855 2.62858 2.62855 1.42858 4.08569 1.42858H11.9143C13.3714 1.42858 14.5714 2.62858 14.5714 4.08572V11.9429C14.5714 13.3714 13.3714 14.5714 11.9143 14.5714Z" fill="#888888" stroke-miterlimit="10"/> </svg> </i>',
    dateTime: '<i> <svg class="svgWidth" height=\'100px\' width=\'100px\'  fill="#888888" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" x="0px" y="0px" viewBox="0 0 1024 1024" style="enable-background:new 0 0 1024 1024;" xml:space="preserve"><g><g><path id="svgHover" d="M826.8,764c-23.6-23.5-47.2-47.1-70.8-70.6c-3.4-3.4-6.7-6.7-10.1-10.1c3.9,9.4,7.8,18.9,11.7,28.3    c0-28.1,0-56.3,0-84.4c0-4,0-8,0-12c0-20.9-18.4-41-40-40c-21.7,1-40,17.6-40,40c0,30.5,0,61,0,91.4c0,1.6-0.1,3.2,0,4.7    c0.4,11.1,4.6,21,12.2,29.1c3.3,3.4,6.7,6.7,10.1,10.1c13.6,13.5,27.1,27,40.7,40.6c9.9,9.9,19.8,19.7,29.7,29.6    c14.8,14.8,41.9,15.9,56.6,0C841.5,804.6,842.7,779.8,826.8,764L826.8,764z"></path></g></g><g><g><path id="svgHover" d="M908.7,711.8c0,10.2-0.7,20.4-2,30.5c0.5-3.5,1-7.1,1.4-10.6c-2.8,20.5-8.2,40.6-16.3,59.7    c1.3-3.2,2.7-6.4,4-9.6c-7.8,18.2-17.8,35.3-29.9,51c2.1-2.7,4.2-5.4,6.3-8.1c-12.1,15.5-26,29.5-41.5,41.5    c2.7-2.1,5.4-4.2,8.1-6.3c-15.7,12.1-32.8,22.1-51,29.9c3.2-1.3,6.4-2.7,9.6-4c-19.1,8-39.1,13.5-59.7,16.3    c3.5-0.5,7.1-1,10.6-1.4c-20.6,2.7-41.5,2.6-62.1-0.1c3.5,0.5,7.1,1,10.6,1.4c-19.8-2.8-39.2-8-57.6-15.7c3.2,1.3,6.4,2.7,9.6,4    c-18.5-7.8-35.8-17.9-51.7-30.1c2.7,2.1,5.4,4.2,8.1,6.3c-15.7-12.2-29.8-26.3-42-42c2.1,2.7,4.2,5.4,6.3,8.1    c-12.2-15.9-22.3-33.2-30.1-51.6c1.3,3.2,2.7,6.4,4,9.6c-7.8-18.9-13.2-38.6-15.9-58.8c0.5,3.5,1,7.1,1.4,10.6    c-2.6-20.3-2.6-40.8,0-61.1c-0.5,3.5-1,7.1-1.4,10.6c2.8-20.5,8.2-40.6,16.3-59.7c-1.3,3.2-2.7,6.4-4,9.6    c7.8-18.2,17.8-35.3,29.9-51c-2.1,2.7-4.2,5.4-6.3,8.1c12.1-15.5,26-29.5,41.5-41.5c-2.7,2.1-5.4,4.2-8.1,6.3    c15.7-12.1,32.8-22.1,51-29.9c-3.2,1.3-6.4,2.7-9.6,4c19.1-8,39.1-13.5,59.7-16.3c-3.5,0.5-7.1,1-10.6,1.4c20.4-2.6,41-2.6,61.4,0    c-3.5-0.5-7.1-1-10.6-1.4c20.4,2.8,40.3,8.2,59.3,16.2c-3.2-1.3-6.4-2.7-9.6-4c18.2,7.8,35.2,17.8,50.9,29.8    c-2.7-2.1-5.4-4.2-8.1-6.3c15.5,12,29.4,25.9,41.5,41.4c-2.1-2.7-4.2-5.4-6.3-8.1c12.4,16,22.6,33.5,30.5,52.2    c-1.3-3.2-2.7-6.4-4-9.6c7.8,18.7,13.1,38.2,15.8,58.2c-0.5-3.5-1-7.1-1.4-10.6C908,691,908.7,701.4,908.7,711.8    c0.1,20.9,18.3,41,40,40c21.6-1,40.1-17.6,40-40c-0.2-56.5-17.9-114.1-52.1-159.3c-9.3-12.3-19-24.2-30.1-35    c-11.1-10.7-23.2-20.3-35.8-29.2c-24.8-17.4-53.4-30.4-82.6-38.2c-53.8-14.3-113.7-12.3-165.6,8.2c-25.5,10-48.5,22.6-70.1,39.3    c-21.3,16.5-39,35.3-55,57c-30.5,41.3-47,92.2-50.1,143.2c-3.6,60.4,14.6,123.8,50.9,172.3c8.9,11.8,18.1,23.4,28.6,33.8    c10.6,10.6,22.4,20,34.5,28.8c21.8,16,46.6,28,72.3,36.6c51.3,17.3,109.5,17.9,161.3,2.3c48-14.4,92.8-42.3,125.7-80.2    c33.2-38.2,57.1-85.3,64.4-135.7c2.1-14.6,3.8-29.1,3.8-43.9c0.1-20.9-18.4-41-40-40C927,672.8,908.8,689.4,908.7,711.8z"></path></g></g><g><g><path id="svgHover" d="M183.4,94.9c-9.6,0-19.1,0-28.7,0c-14.8,0-29.7,0-43.9,4.6c-44.5,14.2-75.1,55.1-75.4,101.9    c-0.1,19.6,0,39.3,0,58.9c0,43.3,0,86.5,0,129.8c0,51.7,0,103.4,0,155c0,45,0,90,0,135.1c0,22.9,0,45.7,0,68.6    c0,36.8,17.7,69.3,47.7,90.3c19.4,13.5,42.6,17.7,65.7,17.7c35,0,69.9,0,104.9,0c51.1,0,102.1,0,153.2,0c33.4,0,66.8,0,100.3,0    c1.7,0,3.3,0,5,0c20.9,0,41-18.4,40-40c-1-21.7-17.6-40-40-40c-12.5,0-25,0-37.5,0c-30.1,0-60.1,0-90.2,0c-36,0-72,0-108,0    c-30.7,0-61.5,0-92.2,0c-14.1,0-28.3,0.1-42.4,0c-2.9,0-5.7-0.2-8.5-0.5c3.5,0.5,7.1,1,10.6,1.4c-5.8-0.8-11.4-2.3-16.9-4.4    c3.2,1.3,6.4,2.7,9.6,4c-5.3-2.2-10.2-5-14.8-8.5c2.7,2.1,5.4,4.2,8.1,6.3c-4.9-3.8-9.1-8-12.9-12.9c2.1,2.7,4.2,5.4,6.3,8.1    c-3.4-4.6-6.2-9.5-8.5-14.8c1.3,3.2,2.7,6.4,4,9.6c-2.2-5.5-3.6-11-4.4-16.9c0.5,3.5,1,7.1,1.4,10.6c-0.8-7.1-0.5-14.3-0.5-21.5    c0-13.1,0-26.3,0-39.4c0-44,0-88.1,0-132.1c0-53.8,0-107.5,0-161.3c0-46.1,0-92.2,0-138.2c0-21.6-0.1-43.1,0-64.7    c0-2.9,0.2-5.9,0.5-8.8c-0.5,3.5-1,7.1-1.4,10.6c0.8-5.8,2.3-11.4,4.4-16.9c-1.3,3.2-2.7,6.4-4,9.6c2.2-5.3,5-10.2,8.5-14.8    c-2.1,2.7-4.2,5.4-6.3,8.1c3.8-4.9,8-9.1,12.9-12.9c-2.7,2.1-5.4,4.2-8.1,6.3c4.6-3.4,9.5-6.2,14.8-8.5c-3.2,1.3-6.4,2.7-9.6,4    c5.5-2.2,11-3.6,16.9-4.4c-3.5,0.5-7.1,1-10.6,1.4c8.7-1,17.6-0.5,26.3-0.5c8,0,15.9,0,23.9,0c20.9,0,41-18.4,40-40    C222.4,113.2,205.8,94.9,183.4,94.9L183.4,94.9z"></path></g></g><g><g><path id="svgHover" d="M737.6,174.9c8.8,0,17.5,0,26.3,0c9.5,0,19.3-0.6,28.7,0.5c-3.5-0.5-7.1-1-10.6-1.4    c5.8,0.8,11.4,2.3,16.9,4.4c-3.2-1.3-6.4-2.7-9.6-4c5.3,2.2,10.2,5,14.8,8.5c-2.7-2.1-5.4-4.2-8.1-6.3c4.9,3.8,9.1,8,12.9,12.9    c-2.1-2.7-4.2-5.4-6.3-8.1c3.4,4.6,6.2,9.5,8.5,14.8c-1.3-3.2-2.7-6.4-4-9.6c2.2,5.5,3.6,11,4.4,16.9c-0.5-3.5-1-7.1-1.4-10.6    c1.4,12.4,0.5,25.2,0.5,37.7c0,25.4,0,50.7,0,76.1c0,58.6,0,117.3,0,175.9c0,13.5,0,26.9,0,40.4c0,20.9,18.4,41,40,40    c21.7-1,40-17.6,40-40c0-17.7,0-35.4,0-53.1c0-38.4,0-76.8,0-115.2c0-37.1,0-74.2,0-111.3c0-23.1,2.5-49.3-4.2-71.6    c-12.1-40.5-46.7-69.9-88.4-75.5c-18-2.4-36.5-1.2-54.6-1.2c-1.9,0-3.8,0-5.7,0c-20.9,0-41,18.4-40,40    C698.6,156.5,715.2,174.9,737.6,174.9L737.6,174.9z"></path></g></g><g><g><path id="svgHover" d="M388.9,174.9c44.1,0,88.1,0,132.2,0c6.2,0,12.5,0,18.7,0c20.9,0,41-18.4,40-40c-1-21.7-17.6-40-40-40    c-44.1,0-88.1,0-132.2,0c-6.2,0-12.5,0-18.7,0c-20.9,0-41,18.4-40,40C349.9,156.5,366.5,174.9,388.9,174.9L388.9,174.9z"></path></g></g><g><g><path id="svgHover" d="M246.6,81.3c0,32.4,0,64.8,0,97.3c0,4.7,0,9.3,0,14c0,20.9,18.4,41,40,40c21.7-1,40-17.6,40-40    c0-32.4,0-64.8,0-97.3c0-4.7,0-9.3,0-14c0-20.9-18.4-41-40-40C265,42.3,246.6,58.9,246.6,81.3L246.6,81.3z"></path></g></g><g><g><path id="svgHover" d="M76.2,356.5c6.9,0,13.8,0,20.7,0c18.7,0,37.4,0,56.1,0c27.8,0,55.5,0,83.3,0c33.9,0,67.8,0,101.7,0    c37,0,73.9,0,110.9,0c37.5,0,75,0,112.4,0c34.9,0,69.9,0,104.8,0c29.4,0,58.8,0,88.2,0c21.2,0,42.5,0,63.7,0    c10.1,0,20.1,0.1,30.2,0c0.4,0,0.9,0,1.3,0c20.9,0,41-18.4,40-40c-1-21.7-17.6-40-40-40c-6.9,0-13.8,0-20.7,0    c-18.7,0-37.4,0-56.1,0c-27.8,0-55.5,0-83.3,0c-33.9,0-67.8,0-101.7,0c-37,0-73.9,0-110.9,0c-37.5,0-75,0-112.4,0    c-34.9,0-69.9,0-104.8,0c-29.4,0-58.8,0-88.2,0c-21.2,0-42.5,0-63.7,0c-10.1,0-20.1-0.1-30.2,0c-0.4,0-0.9,0-1.3,0    c-20.9,0-41,18.4-40,40C37.2,338.2,53.8,356.5,76.2,356.5L76.2,356.5z"></path></g></g><g><g><path id="svgHover" d="M597.3,82.8c0,32.4,0,64.8,0,97.3c0,4.7,0,9.3,0,14c0,20.9,18.4,41,40,40c21.7-1,40-17.6,40-40    c0-32.4,0-64.8,0-97.3c0-4.7,0-9.3,0-14c0-20.9-18.4-41-40-40C615.6,43.7,597.3,60.3,597.3,82.8L597.3,82.8z"></path></g></g></svg> </i>',
    multiSelect: '<i> <svg class="multiSelect" width="18" height="14" viewBox="0 0 18 14" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9.0869 11.1827H1.48847C1.07902 11.1827 0.75 11.5118 0.75 11.9212C0.75 12.3307 1.07902 12.6597 1.48847 12.6597H9.0869C9.49635 12.6597 9.82537 12.3307 9.82537 11.9212C9.82537 11.5118 9.49635 11.1827 9.0869 11.1827Z" fill="#888888" stroke="#888888" stroke-width="0.5"/><path d="M9.0869 6.47693H1.48847C1.07902 6.47693 0.75 6.80596 0.75 7.2154C0.75 7.62484 1.07902 7.95387 1.48847 7.95387H9.0869C9.49635 7.95387 9.82537 7.62485 9.82537 7.2154C9.82537 6.80596 9.49635 6.47693 9.0869 6.47693Z" fill="#888888" stroke="#888888" stroke-width="0.5"/><path d="M9.0869 1.45715H1.48847C1.07902 1.45715 0.75 1.78618 0.75 2.19563C0.75 2.60507 1.07902 2.9341 1.48847 2.9341H9.0869C9.49635 2.9341 9.82537 2.60507 9.82537 2.19563C9.82537 1.78618 9.49635 1.45715 9.0869 1.45715Z" fill="#888888" stroke="#888888" stroke-width="0.5"/><path d="M14.1669 13.1768L14.3437 13.3535L14.5205 13.1767L17.0611 10.6354C17.3131 10.3834 17.3131 9.97527 17.0611 9.72329C16.8091 9.47131 16.401 9.47131 16.149 9.72329L16.149 9.72332L14.3436 11.5294L12.5376 9.72401C12.5376 9.72399 12.5376 9.72398 12.5376 9.72397C12.2856 9.47202 11.8775 9.47203 11.6255 9.72401C11.3735 9.97599 11.3735 10.3841 11.6255 10.6361L11.6255 10.6361L14.1669 13.1768Z" fill="#888888" stroke="#888888" stroke-width="0.5"/><path d="M14.1669 8.78482L14.3437 8.96157L14.5205 8.78477L17.0611 6.24341C17.3131 5.99142 17.3131 5.5833 17.0611 5.33132C16.8091 5.07934 16.401 5.07934 16.149 5.33132L16.149 5.33135L14.3436 7.1374L12.5376 5.33204C12.5376 5.33203 12.5376 5.33202 12.5376 5.33201C12.2856 5.08006 11.8775 5.08007 11.6255 5.33204C11.3735 5.58402 11.3735 5.99214 11.6255 6.24412L11.6255 6.24415L14.1669 8.78482Z" fill="#888888" stroke="#888888" stroke-width="0.5"/><path d="M14.1669 4.39249L14.3437 4.56924L14.5205 4.39244L17.0611 1.85107C17.3131 1.59909 17.3131 1.19097 17.0611 0.938986C16.8091 0.687005 16.401 0.687005 16.149 0.938986L16.149 0.939018L14.3436 2.74507L12.5376 0.939704C12.5376 0.939693 12.5376 0.939682 12.5376 0.939672C12.2856 0.687722 11.8775 0.687733 11.6255 0.939704C11.3735 1.19168 11.3735 1.59981 11.6255 1.85179L11.6255 1.85181L14.1669 4.39249Z" fill="#888888" stroke="#888888" stroke-width="0.5"/></svg> </i>',
    time: '<i> <svg class="svgWidth" height=\'100px\' width=\'100px\'  fill="#888888" xmlns="http://www.w3.org/2000/svg" data-name="Layer 1" viewBox="0 0 100 100" x="0px" y="0px"><title>all</title><g><g><g data-name="Zoom In"><g data-name="Calendar"><g><g><g><g><g><g><path d="M74.15,59.75h-24c-0.12,0-.23,0-0.36,0a3.88,3.88,0,0,1-5.31-3.64V23.19a3.91,3.91,0,0,1,7.81,0V48.81H74.15A5.47,5.47,0,0,1,74.15,59.75Z"></path><path d="M50,0a50,50,0,1,0,50,50A50,50,0,0,0,50,0Zm0,89.06A39.06,39.06,0,1,1,89.06,50,39.11,39.11,0,0,1,50,89.06Z"></path><path d="M74.15,48.81H52.32V23.19a3.91,3.91,0,0,0-7.81,0V56.08a3.88,3.88,0,0,0,5.31,3.64c0.12,0,.23,0,0.36,0h24A5.47,5.47,0,0,0,74.15,48.81Z"></path></g></g></g></g></g></g></g></g></g></g></svg> </i>',
  };

  defaultFilter = {
    andOr: 'And',
    selectedCol: {name: 'First Name', icon: 'https://alorecdn.blob.core.windows.net/crmdata/user_icons.svg'},
    contains: 'Contains',
    showContainsDDM: false,
    showColDDM: false,
    showSearchDataDDm: false,
    hideIconOnFocus: true,
    fieldName: 'firstName',
    searchFilter: {searchFilterText: '', searchFilterArray: []},
    dateFilter: [],
    containsArray: ['Contains', 'Does Not Contains', 'Is', 'Is Not', 'Is Empty', 'Is Not Empty']
  };
  andOrStatus = 'And';

  headers = new HttpHeaders({Authorization: 'bearer dF9V_1j7qZGWESdzN2_8ziO9s08'});

  /* handleError(error: HttpErrorResponse) {
     let errorMessage = 'Unknown error!';
     if (error.error instanceof ErrorEvent) {
       // Client-side errors
       errorMessage = `Error: ${error.error.message}`;
     } else {
       // Server-side errors
       errorMessage = `Error Code: ${error.status}\nMessage: ${error.message}`;
     }
     // window.alert(errorMessage);
     return throwError(errorMessage);
   }*/

  handleError(error: HttpErrorResponse) {
    const errorMessage = {errorCode: 0, errorMessage: ''};
    if (error.error instanceof ErrorEvent) {
      // Client-side errors
      errorMessage.errorMessage = error.error.message;
    } else {
      // Server-side errors
      errorMessage.errorCode = error.status;
      errorMessage.errorMessage = error.message;
    }
    return throwError(errorMessage);
  }

  saveSegment(addSegmentRequest: any): Observable<any> {
    return this.httpClient.post(this.coreBackendBaseURL + '/segment/add/' + this.userId + '/' + this.companyId, addSegmentRequest, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  getAllSegments(): Observable<any> {
    return this.httpClient.get(this.coreBackendBaseURL + '/segment/getAllSegments/' + this.userId + '/' + this.companyId, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  saveTable(addTableRequest: any): Observable<any> {
    return this.httpClient.post(this.coreBackendBaseURL + '/table/add/' + this.userId + '/' + this.companyId, addTableRequest, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  deleteSegment(segmentId: any): Observable<any> {
    return this.httpClient.delete(this.coreBackendBaseURL + '/segment/delete/' + segmentId + '/' + this.userId + '/' + this.companyId, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  getAllProspectColumns(): Observable<any> {
    return this.httpClient.get(this.coreBackendBaseURL + '/prospectColumns/getAllColumns/' + this.userId + '/' + this.companyId, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  getAllProspectData(tableId: number, pageNumber: number, sortByRequest?: any): Observable<any> {
    const sortByRequestBody = sortByRequest ? sortByRequest : {};
    return this.httpClient.post(this.coreBackendBaseURL + '/prospects/getProspects/linkedIn/' + tableId + '/' + pageNumber + '/' + this.userId + '/' + this.companyId, sortByRequestBody, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  applyFilterAndSortOnProspects(): void {
    // console.log(this.sortByRequest.ascOrDesc);
    const sortByRequestBody = this.sortByRequest.ascOrDesc !== undefined ? this.sortByRequest : null;
    const commonFilterRequest = this.commonFilterRequest.filterRequstList.length !== 0 ? this.commonFilterRequest : null;
    const sortByRequest = new SortByRequest();
    sortByRequest.commonFilterRequest = commonFilterRequest;
    sortByRequest.sortByReq = sortByRequestBody;
    this.getAllProspectData(this.selectedTable.tableId, 1, sortByRequest).subscribe(response => {
      this.prospectDataSet = response.list;
      /*this.hotInstance.render();*/
      this.isSortingLoading = false;
      this.sortByDDMVisibility$.next(false);
      this.isFilterLoading = false;
    }, error => {
      console.log(error);
    });
    // console.log(this.hotInstance);
  }

  editIndividualSegment(segmentRequest: SegmentRequest): Observable<any> {
    return this.httpClient.post(this.coreBackendBaseURL + '/segment/update/' + this.userId + '/' + this.companyId, segmentRequest, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  checkDuplicateSegmentName(newSegmentName: string): Observable<any> {
    return this.httpClient.get(this.coreBackendBaseURL + '/segment/checkDuplicate/' + newSegmentName + '/' + this.userId + '/' + this.companyId, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  checkDuplicateEditSegmentName(segmentId: number, segmentName: string): Observable<any> {
    return this.httpClient.get(this.coreBackendBaseURL + '/segment/edit/checkDuplicate/' + segmentId + '/' + segmentName + '/' + this.userId + '/' + this.companyId, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  checkDuplicateTableName(newTableName: string, segmentId: number): Observable<any> {
    return this.httpClient.get(this.coreBackendBaseURL + '/table/checkDuplicate/' + segmentId + '/' + newTableName + '/' + this.userId + '/' + this.companyId, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  updateSegmentHiddenStatus(segmentId: number): Observable<any> {
    return this.httpClient.patch(this.coreBackendBaseURL + '/segment/updateHidden/' + segmentId + '/' + this.userId + '/' + this.companyId, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  updateAllSegmentStatus(status: boolean): Observable<any> {
    return this.httpClient.patch(this.coreBackendBaseURL + '/segment/updateHiddenForAllSegments/' + status + '/' + this.userId + '/' + this.companyId, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  getAllTagOptions(): Observable<ResponseList> {
    return this.httpClient.get<ResponseList>(this.coreBackendBaseURL + '/tagOptions/getAll/' + this.userId + '/' + this.companyId, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  updateHiddenStatus(colId: number): Observable<any> {
    return this.httpClient.get(this.coreBackendBaseURL + '/prospectColumns/updatehiddenStatus/' + colId + '/' + this.userId + '/' + this.companyId, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  updateAllHiddenStatus(ishidden: boolean): Observable<any> {
    return this.httpClient.get(this.coreBackendBaseURL + '/prospectColumns/updateAllColumns/' + ishidden + '/' + this.userId + '/' + this.companyId, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  addTagOptions(newTag: TagOptions) {
    return this.httpClient.post(this.coreBackendBaseURL + '/tagOptions/addTagOptions', newTag, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  updateProspects(selectedRow: any): Observable<any> {
    return this.httpClient.post(this.coreBackendBaseURL + '/prospects/updateProspects', selectedRow, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  updateInbuiltColumnMapping(prospectColumn: ProspectColumn) {
    return this.httpClient.post(this.coreBackendBaseURL + '/chromeDataInbuiltColumns/updateInbuiltColumnMapping/' + this.userId + '/' + this.companyId, prospectColumn, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  getGroupedBYData(groupByReq: GroupByRequest, tableId: number, provider: string, pageIndex: number): Observable<any> {
    return this.httpClient.post(this.coreBackendBaseURL + '/prospects/gerProspects/groupBy/' + provider + '/' + tableId + '/' + pageIndex
      + '/' + this.userId + '/' + this.companyId, groupByReq, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  getSegmentView(): Observable<any> {
    return this.httpClient.get(this.coreBackendBaseURL + '/views/getViewInfo/' + this.userId + '/' + this.companyId, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  updateSegmentView(segmentView: SegmentView): Observable<any> {
    return this.httpClient.post(this.coreBackendBaseURL + '/views/update', segmentView, {headers: this.headers}).pipe(catchError(this.handleError));
  }

  updateWrapCellsState(wrapCellConfigObject: any) {
    return this.httpClient.post<any>(this.coreBackendBaseURL + '/tableConfig/update', wrapCellConfigObject, {headers: this.headers})
      .pipe(catchError(this.handleError));
  }

  getSVGIcon(field: any): string {
    switch (field) {
      case 'firstName':
      case 'lastName': {
        return this.SVGIcon.user;
      }

      case 'phone': {
        return this.SVGIcon.phone;
      }

      case 'prospectLocation' :
      case 'companyName' :
      case 'headquater' :
      case 'address' :
      case 'foundedYear':
      case 'prospectorLocation': {
        return this.SVGIcon.text;
      }

      case 'zipCode': {
        return this.SVGIcon.number;
      }
    }
  }
}
